#!/usr/bin/env zunit

@setup {
  source ./m.zsh
}

@test 'mg - no args: shows usage' {
  run mg

  assert $state equals 0
  assert "$output" contains "usage"
  assert "${#lines}" equals 5
}

@test 'mg - invalid flag: shows usage' {
  run mg -z asdf

  assert $state equals 1
  assert "$output" contains "usage"
  assert "${#lines}" equals 5
}

@test 'mg_args single word' {
  run mg_args asdf

  assert $state equals 0
  assert "$output" same_as "--untracked --ignore-case asdf"
}

@test 'mg_args smartcase' {
  run mg_args Asdf

  assert $state equals 0
  assert "$output" same_as "--untracked Asdf"
}

@test 'mg_args -c case sensitive' {
  run mg_args -c asdf

  assert $state equals 0
  assert "$output" same_as "--untracked asdf"
}

@test 'mg_args -h suppress files' {
  run mg_args -h asdf

  assert $state equals 0
  assert "$output" same_as "--untracked -h --ignore-case asdf"
}

@test 'mg_args -hc case sensitive and suppress files' {
  run mg_args -hc asdf

  assert $state equals 0
  assert "$output" same_as "--untracked -h asdf"
}

@test 'mg_args -l only file names' {
  run mg_args -l asdf

  assert $state equals 0
  assert "$output" same_as "--untracked -l --ignore-case asdf"
}

@test 'mg_excludes pattern -v exclude_patterns' {
  run mg_excludes one -v two

  assert $state equals 0
  assert "$output" same_as "two"

  run mg_excludes -c one -v two

  assert $state equals 0
  assert "$output" same_as "two"


  run mg_excludes -c one -v two three

  assert $state equals 0
  assert "$output" same_as "(two|three)"
}

@test 'mg works with regex' {
  run mg_args -E '^...asdf'

  assert $state equals 0
  assert "$output" same_as "--untracked --ignore-case -E ^...asdf"
}

@test 'mg multi words' {
  run mg_args 'one two three'

  assert $state equals 0
  assert "$output" same_as "--untracked --ignore-case one two three"
}

@test 'mg handles directories' {
  run mg_args hello dir1/dir2

  assert $state equals 0
  assert "$output" same_as "--untracked --ignore-case hello -- dir1/dir2"
}
