#!/usr/bin/env zunit

@setup {
  source ./test_helper.zsh
  source ./m.zsh
  ROOT_DIR=$(pwd)
  echo "fixtures/gitignored/ignored/*" > .gitignore
}

@teardown {
  cd $ROOT_DIR
  if [ -f .gitignore ];then
    rm .gitignore
  fi
}

@test 'mo - without a previously run mg command' {
  M_HISTORY_TEST=('ls')

  run mo

  assert $state equals 1
  assert "$output" same_as "cannot find recently run mg command"
}

@test 'mo - non integer first argument displays mo usage' {
  M_HISTORY_TEST=('mg three')
  run mo -h

  assert $state equals 1
  assert "$output" contains "usage"
  assert "${#lines}" equals 3
}

@test 'mo - no args: opens all files from last mg' {
  cd fixtures/basic

  M_HISTORY_TEST=('mg three' 'mg other')

  mo

  run m_called_with

  assert $state equals 0
  assert ${#lines} equals 2
  assert "cases.txt" in "$output"
  assert "numbers.txt" in "$output"
}

@test 'mo 1 - opens 1st mg output 1' {
  cd fixtures/basic

  M_HISTORY_TEST=('mg three' 'mg other')

  mo 1

  run m_called_with

  assert $state equals 0
  assert "$output" same_as "cases.txt"
}

@test 'mo 1 -opens 1st mg output 2' {
  cd fixtures/basic

  M_HISTORY_TEST=('mg one' 'mg other')

  mo 1

  run m_called_with

  assert $state equals 0
  assert "$output" same_as "long_lines.txt"
}

@test 'mo 2 - opens 2nd mg output 1' {
  cd fixtures/basic

  M_HISTORY_TEST=('mg three' 'mg other')

  mo 2

  run m_called_with

  assert $state equals 0
  assert "$output" same_as "cases.txt"
}

@test 'mo 2 - opens 2nd mg output 2' {
  cd fixtures/basic

  M_HISTORY_TEST=('mg one' 'mg other')

  mo 2

  run m_called_with

  assert $state equals 0
  assert "$output" same_as "numbers.txt"
}
